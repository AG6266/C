Q1: Check if Files Exist in Current Directory

#include <stdio.h>
#include <stdlib.h>

int main(int argc, char *argv[]) {
    if (argc < 2) {
        printf("Usage: %s <file1> <file2> ...\n", argv[0]);
        return 1;
    }

    for (int i = 1; i < argc; i++) {
        FILE *file = fopen(argv[i], "r");
        if (file) {
            printf("File '%s' is present in current directory.\n", argv[i]);
            fclose(file);
        } else {
            printf("File '%s' is NOT present in current directory.\n", argv[i]);
        }
    }

    return 0;
}

Q2: Parent Sends Signals, Child Handles Them

#include <stdio.h>
#include <stdlib.h>
#include <unistd.h>
#include <signal.h>

void handle_sighup(int sig) {
    printf("Child received SIGHUP\n");
}

void handle_sigint(int sig) {
    printf("Child received SIGINT\n");
}

void handle_sigquit(int sig) {
    printf("My Papa has Killed me!!! me!!!\n");
    exit(0);
}

int main() {
    pid_t pid = fork();

    if (pid == 0) {
        signal(SIGHUP, handle_sighup);
        signal(SIGINT, handle_sigint);
        signal(SIGQUIT, handle_sigquit);

        while (1) {
            sleep(1);
        }
    } else if (pid > 0) {
        for (int i = 0; i < 5; i++) {
            sleep(3);
            if (i % 2 == 0)
                kill(pid, SIGHUP);
            else
                kill(pid, SIGINT);
        }

        kill(pid, SIGQUIT);
        wait(NULL);
    } else {
        perror("fork failed");
        return 1;
    }

    return 0;
}
