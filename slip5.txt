Q1: List Files and Count in Current Directory


#include <stdio.h>
#include <dirent.h>

int main() {
    DIR *dir;
    struct dirent *entry;
    int count = 0;

    dir = opendir(".");
    if (dir == NULL) {
        perror("opendir");
        return 1;
    }

    printf("Files in current directory:\n");
    while ((entry = readdir(dir)) != NULL) {
        if (entry->d_type == DT_REG) {
            printf("%s\n", entry->d_name);
            count++;
        }
    }

    closedir(dir);
    printf("Total number of files: %d\n", count);

    return 0;
}


Q2: Unnamed Pipe Communication Between Parent and Child


#include <stdio.h>
#include <stdlib.h>
#include <unistd.h>
#include <string.h>

int main() {
    int fd[2];
    pid_t pid;
    char buffer[100];

    if (pipe(fd) == -1) {
        perror("pipe");
        return 1;
    }

    pid = fork();

    if (pid == 0) {
        close(fd[0]); // Close read end

        write(fd[1], "Message 1\n", strlen("Message 1\n"));
        write(fd[1], "Message 2\n", strlen("Message 2\n"));
        write(fd[1], "Message 3\n", strlen("Message 3\n"));

        close(fd[1]);
    } else if (pid > 0) {
        close(fd[1]); // Close write end

        printf("Parent received:\n");
        while (read(fd[0], buffer, sizeof(buffer)) > 0) {
            printf("%s", buffer);
        }

        close(fd[0]);
    } else {
        perror("fork");
        return 1;
    }

    return 0;
}

